[1/12] Linking C static library esp-idf/protocol_examples_common/libprotocol_examples_common.a
[2/12] Linking C static library esp-idf/wifi_provisioning/libwifi_provisioning.a
[3/12] Performing build step for 'bootloader'
[1/1] cd /Users/vitorlamego/esp/Trabalho_Final/build/bootloader/esp-idf/esptool_py && /Users/vitorlamego/.espressif/python_env/idf5.1_py3.8_env/bin/python /Users/vitorlamego/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/vitorlamego/esp/Trabalho_Final/build/bootloader/bootloader.bin
Bootloader binary size 0x66c0 bytes. 0x940 bytes (8%) free.
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Building C object CMakeFiles/Trabalho_Final.elf.dir/project_elf_src_esp32.c.obj
[8/10] Linking CXX executable Trabalho_Final.elf
[9/10] Generating binary image from built executable
esptool.py v4.3
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated /Users/vitorlamego/esp/Trabalho_Final/build/Trabalho_Final.bin
[10/10] cd /Users/vitorlamego/esp/Trabalho_Final/build/esp-idf/esptool_py && /Users/vitorlamego/.espressif/python_env/idf5.1_py3.8_env/bin/python /Users/vitorlamego/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/vitorlamego/esp/Trabalho_Final/build/partition_table/partition-table.bin /Users/vitorlamego/esp/Trabalho_Final/build/Trabalho_Final.bin
Trabalho_Final.bin binary size 0xaee10 bytes. Smallest app partition is 0x100000 bytes. 0x511f0 bytes (32%) free.
